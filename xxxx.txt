
1介绍：
面试官你好，我是叶正茂，毕业于广东财经大学。本人从事游戏测试工作已有一年左右，之前的项目是一个rpg+slg类型的小游戏，在工作期间我负责了新手主线任务及引导，部分开服活动，战斗技能以及slg的建筑功能，也掌握Python这一门编程语言，可以编写简单的脚本辅助测试，也对白盒测试有一些了解，也掌握svn，git的一些基本操作
2舆情问题
    收集玩家的反馈，从测试的角度分析原因，并汇报；
    反思为什么没有提前发现这个问题，从技术角度思考要怎么避免；
    在需求分析，评审时，多考虑这方面的问题。
3新车测试点
    需求分析，了解现实中该车辆的相关背景
    车辆解锁条件
    车辆外观模型，是否符合授权方的外形资料，可动部件的正常工作
    车辆的详情界面，根据配置核对相关文字描述，参数
    车辆的升级，调教功能
    车辆的个性化功能
    最重要的是车辆的具体物理数值测试，要测试不同ecu等级，不同改装等级，以及不同调教下的车辆数据，如零百加速，中后端加速，变速箱换挡逻辑，不同档位下动力输出，轮胎抓地力，车重等等因素
4linux常见指令

5Python常见数据结构
    元组，列表，字典，集合，Dataframe，对象等
6数据库相关
    sql语句select，join，聚合，存储过程，索引，事务隔离级别，e-r模型，触发器
7git,svn
    git常见的指令：git clone + 仓库地址（https，ssh），git init,git add,git commit,git push,git pull,git checkout,git switch,git merge,git log,git status等；
    svn；checkout，认证权限后，svn update,svn showlog,revert,diff等
8服务器部署
    本地部署服务器环境，java，idea，从远端git clone代码到本地，设置代理和参数，然后本地开启服务debug；需要后端在nacos上配置。
9逻辑思维，10,7ml的杯子
    先用10ml装满，再倒进7ml杯子里，这样就有3ml的水，然后将7ml杯子的水倒回，将3ml水倒进7ml杯子中，再把农药装满7ml的杯子，之后全部倒进10ml杯子中，再将10ml加水加满。
10竞速游戏的理解
    自由发挥
11游戏某些系统的优化
    首先确定有什么问题，分析原因是什么，再想如何改进，从策划功能设计、程序实现以及用户体验角度来说。
12过往项目相关内容
    宠物，功能开启，宠物列表上限，宠物详情，品质，形象，宠物的养成，考虑边界值，道具消耗，图鉴等功能；
    关卡战斗，功能开启，怪物属性（后端发送），新手任务，功能解锁强引导，任务弱引导，初始关卡，boss关卡，关卡切换过程中，进行一些操作，会不会引发报错。关卡奖励发放，关卡内，关卡外操作。
    战斗技能，技能获取，技能获取后的属性加成，技能装备，主动还是被动技能，技能释放条件如cd或处于每种状态，释放操作，作用目标，效果类型，状态buff，需要考虑状态互斥，是否可以叠加，接下来是技能表现相关，如喊话，特效，出手帧，受击帧，伤害飘字，是否正常；测数值，根据技能数值相关配置，技能等级，双方属性加成，套用单位行动结果计算公式，得到正确的数值
13偶现bug如何定位处理
    首先尝试复现该bug，分析是由哪个功能模块导致的，如果不确定，如果有录屏操作的话，回去看bug发生时具体进行了什么操作，同时也可以分析日志，看前端资源加载有无异常，前后端通信的协议数据是否正常；还有比较直接的办法就是，查看报错信息，检查相关功能的代码实现是否有误，或者是策划错误配表导致的。
14c++访问修饰符
    1.public 公有 所有的类都能访问  2.private 默认，私有，变量，方法只能在类内部使用  3.protected 类及子类中才能访问，java里是同一个包下才能访问
15常玩的游戏如何测试
    抽卡概率，修改配置，看有没有生效；保底机制，或者随着抽卡次数增加，概率会变高等机制，积分兑换；
16竞速游戏吸引人的地方
    精致的赛车模型，出色的操控体验，丰富的赛道地图，速度与激情，不断突破记录的成就感，多人竞技胜利的愉悦，了解关于汽车文化等。
17 技能伤害的配置怎么测试

18 弱网遇到的bug
    主线强引导时，由于网络延迟，引导在错误的界面触发，阻断了游戏正常流程，提交bug给程序修复后，说是与异步机制有关
19 抽卡概率怎么测，保底，修改配置看概率，脚本运行看奖品概率分布
20 王者荣耀英雄技怎么测试
21 搜索功能 怎么测试
22 fps枪械测试
23 提高测试工作效率的方法
    1 合理安排测试时间，避免工作量堆积
    1 优化测试用例，等价类划分，避免重复测试
    2 使用ai补充测试思路，确保测试用例覆盖
    3 采用自动化工具进行一些重复的测试，并监控手机报告
    3 多设备并行测试
    4 实在忙不过来，寻求团队成员帮助
    5 优先保证高优先级的功能测试，上线后如果发现bug，采用热更新的方式修复
    6 开发人员应该做好自测，越早进行测试，时间成本更低
    7 策划应该在功能开发好后初步验收，确保需求符合程度，避免后期开发返工，延误进度

24 还有一天就要更新新版本了，对同一（很多台）车辆不同路况进行测试，怎么提高效率

25 生活中，工作中遇到的压力

26 代码逻辑审查，代码优化，异常处理，空指针

27 工作态度，责任心

28 开始一轮赛车比赛，如何测试
首先是开始比赛前，各选手的配置，调教涂装，在进入对局后都要是正确的，还有地图，不能出现加载时显示这张图，但进去之后是另外一-张地图的情况，以前玩qq飞车是有遇到的。服务端发下来的各种数据是否正确，不同玩家设备中显示是否一致
还有客户端在不同网络下，网络切换后，断线重连的处理，退出对局后，ai是否正常接管车辆，然后要测试冲线结算，考虑一些网络延迟的因素，比如同时冲线，谁的排名在前。或者弱网情况下，冲线的延迟是否在可接受的范围内。比赛结束后，要测试相关排名数据是否正确，以及奖励是否正确发放。还要考虑第一名冲线后提前退出对局，但正常比赛还未结束的时候，又开了新的一局，前一场对局的结果是否会被漏掉，安全性，防外挂要是要考虑的。
29 工作中遇到的问题，如何解决，有没有另外的解决方式

30 回顾一面的表现，反思问题，优化回答



